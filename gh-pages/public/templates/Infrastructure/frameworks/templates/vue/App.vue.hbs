<template>
  <div class="app">
    <h1>üßÖ Onion Architecture + Vue</h1>
    {{#if firstAppService}}
      <button @click="runExampleUseCase" :disabled="loading">
        <span v-if="loading">Running...</span>
        <span v-else>Run Use Case</span>
      </button>
      <p>\{{ message }}</p>

    {{else}}
      <p>No application services were defined.</p>
    {{/if}}
  </div>
</template>

<script lang="ts" setup>
  import { ref } from 'vue';
  {{#if firstAppService}}
  import container from '../Configuration/awilix.config';
  import {
    {{firstAppService}}
  } from '../../Application/Services/{{firstAppService}}';

  const message = ref("Click to run use case");
  const loading = ref(false);

  const runExampleUseCase = async () => {
    loading.value = true;
    try {
      const service = container.resolve<{{{firstAppService}}}>("{{{camel firstAppService}}}");
      await service.runExampleUseCase();
      message.value = "{{firstAppService}}: use case executed ‚úÖ";
    } catch (err) {
      message.value = "‚ùå Error: " + (err as Error).message;
    } finally {
      loading.value = false;
    }
  };
  {{/if}}
</script>

<style scoped src="./App.css" />
