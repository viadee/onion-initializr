import './App.css';
import React, { useState } from 'react';
{{#if firstAppService}}
import container from '../configuration/awilix.config';
import { {{firstAppService}} } from '../../Application/Services/{{firstAppService}}';
{{/if}}
import { Button } from "../../components/ui/button";

function App() {
  {{#if firstAppService}}
  const [message, setMessage] = useState("Click to run use case");
  const [loading, setLoading] = useState(false);

  const handleRunExampleUseCase = async () => {
    setLoading(true);
    try {
      const service = container.resolve<{{{firstAppService}}}>("{{camel firstAppService}}");
      await service.runExampleUseCase();
      setMessage("{{firstAppService}}: use case executed âœ…");
    } catch (err) {
      setMessage("Error: " + (err as Error).message);
    } finally {
      setLoading(false);
    }
  };
  {{/if}}

  return (
    <div className="app">
      <h1>ðŸ§… Onion Architecture + React + ShadCN/UI</h1>
      {{#if firstAppService}}
      <Button onClick={handleRunExampleUseCase} disabled={loading}>
        {loading ? "Running..." : "Run Use Case"}
      </Button>
      <p>{message}</p>
      <Button variant={'secondary'}>This is a shadCN "secondary" Button</Button>
      {{else}}
      <p>No application services were defined.</p>
      {{/if}}
      <div className="mt-10 p-5 border border-gray-300 rounded-lg bg-gray-50">
        <h1>How to Add New ShadCN Components</h1>
        <p>To add a new component from the shadcn library, use the following command:</p>
        <pre className="bg-gray-900 text-gray-200 p-4 rounded overflow-auto">
          <code>npx shadcn@latest add [component-name]</code>
        </pre>
        
        <h3>Examples:</h3>
        <pre className="bg-gray-900 text-gray-200 p-4 rounded overflow-auto">
          <code>
{`# Add a card component
npx shadcn@latest add card`}
          </code>
        </pre>
        <br />
        <pre className="bg-gray-900 text-gray-200 p-4 rounded overflow-auto">
          <code>
{`# Add a modal component
npx shadcn@latest add modal`}
          </code>
        </pre>

        <p><strong>Note:</strong> Components will be added to <code>src/components/ui/</code> directory.</p>
        <p> Afterwards you are able to use the shadcn components in your application.</p>
      </div>
    </div>
  );
}

export default App;